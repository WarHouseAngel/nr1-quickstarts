{
	"name": "Kubernetes Clusters and Nodes",
	"description": "",
	"pages": [
		{
			"name": "Kubernetes Clusters and Nodes",
			"description": "",
			"widgets": [
				{
					"visualization": {
						"id": "viz.markdown"
					},
					"layout": {
						"column": 1,
						"row": 1,
						"height": 2,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"text": "![Kubernetes](https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Kubernetes_logo_without_workmark.svg/1200px-Kubernetes_logo_without_workmark.svg.png)"
					}
				},
				{
					"visualization": {
						"id": "viz.table"
					},
					"layout": {
						"column": 2,
						"row": 1,
						"height": 3,
						"width": 5
					},
					"title": "Clusters",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "from K8sNodeSample, K8sPodSample select uniqueCount(nodeName) as 'Nodes', filter(uniqueCount(podName), where status = 'Running') as 'Running Pods', filter(uniqueCount(podName), where status in ('Pending')) as 'Pending Pods', uniqueCount(podName) as 'Total Pods' facet clusterName since 30 minutes ago limit 1000"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.line"
					},
					"layout": {
						"column": 7,
						"row": 1,
						"height": 3,
						"width": 2
					},
					"title": "CPU Usage",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sNodeSample SELECT average(cpuUsedCores / allocatableCpuCores * 100) AS 'CPU Util %', 100 as '100' since 30 minutes ago TIMESERIES"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.line"
					},
					"layout": {
						"column": 9,
						"row": 1,
						"height": 3,
						"width": 2
					},
					"title": "Memory Usage",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sNodeSample SELECT average(memoryWorkingSetBytes / allocatableMemoryBytes * 100) AS 'Memory Util %', 100 as '100' since 30 minutes ago TIMESERIES"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.line"
					},
					"layout": {
						"column": 11,
						"row": 1,
						"height": 3,
						"width": 2
					},
					"title": "Disk Usage",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "SELECT average(fsUsedBytes / fsCapacityBytes * 100) AS 'Disk Util %', 100 as '100' FROM K8sNodeSample since 30 minutes ago TIMESERIES"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.billboard"
					},
					"layout": {
						"column": 1,
						"row": 3,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "from K8sNodeSample select uniqueCount(nodeName) as 'Nodes' since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.billboard"
					},
					"layout": {
						"column": 1,
						"row": 4,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sPodSample select uniqueCount(podName) as 'Running Pods' where status = 'Running' since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.table"
					},
					"layout": {
						"column": 2,
						"row": 4,
						"height": 5,
						"width": 11
					},
					"title": "Nodes",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sNodeSample, K8sPodSample select filter(uniqueCount(podName), where eventType() = 'K8sPodSample' and status = 'Running') as 'Running Pods', filter(uniqueCount(podName), where eventType() = 'K8sPodSample' and status = 'Pending') as 'Pending Pods', filter(average(cpuUsedCores) / average(allocatableCpuCores) * 100, where eventType() = 'K8sNodeSample') as 'CPU %', filter(average(memoryWorkingSetBytes / allocatableMemoryBytes * 100), where eventType() = 'K8sNodeSample') as 'Mem %', filter(max(fsUsedBytes / fsCapacityBytes) * 100, where eventType() = 'K8sNodeSample') as 'Disk Util %' where nodeName is not null facet nodeName limit 2000 since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.billboard"
					},
					"layout": {
						"column": 1,
						"row": 5,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sPodSample select filter(uniqueCount(podName), where status = 'Running') / filter(uniqueCount(podName), where status in ('Running','Pending')) * 100 as '% Pods Running' since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.billboard"
					},
					"layout": {
						"column": 1,
						"row": 6,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sPodSample select uniqueCount(namespaceName) as 'Namespaces' since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.billboard"
					},
					"layout": {
						"column": 1,
						"row": 7,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"queries": [
							{
								"accountId": 0,
								"nrql": "FROM K8sPodSample select uniqueCount(deploymentName) as 'Deployments' since 30 minutes ago"
							}
						]
					}
				},
				{
					"visualization": {
						"id": "viz.markdown"
					},
					"layout": {
						"column": 1,
						"row": 8,
						"height": 1,
						"width": 1
					},
					"title": "",
					"rawConfiguration": {
						"text": "#"
					}
				}
			]
		}
	]
}
